
body > main > .hero {
  display: grid;
  grid-template-columns: 1fr;
  column-gap: var(#{$css-var-prefix}homepage-spacing-horizontal);
  row-gap: calc(var(#{$css-var-prefix}homepage-spacing-vertical) / 2);
  justify-items: center;
  margin-top: calc(var(#{$css-var-prefix}homepage-spacing-vertical) / 2);
  margin-bottom: 0;

  .demo,
  .hook {
    width: 100%;
    min-width: 0;
  }

  .hook {
    z-index: 1;
    position: relative;

    @media (min-width: map.get(map.get($breakpoints, "lg"), "breakpoint")) {
      max-width: map.get(map.get($breakpoints, "md"), "viewport");
    }

    @media (min-width: map.get(map.get($breakpoints, "xl"), "breakpoint")) {
      max-width: map.get(map.get($breakpoints, "lg"), "viewport");
    }

    h1,
    p {
      text-wrap: balance;
      @media (min-width: map.get(map.get($breakpoints, "sm"), "breakpoint")) {
        text-align: center;
      }
    }

    h1 {
      margin-bottom: calc(var(#{$css-var-prefix}spacing) * 2);
    }

    .grid.ctas {
      #{$css-var-prefix}form-element-spacing-horizontal: 2rem;
      margin-top: calc(var(#{$css-var-prefix}spacing) * 4);
      margin-bottom: calc(var(#{$css-var-prefix}spacing) * 0.5);

      @media (min-width: map.get(map.get($breakpoints, "sm"), "breakpoint")) {
        display: flex;
        justify-content: center;
      }

      a[role="button"] {
        svg {
          width: auto;
          height: 1rem;
          margin-left: calc(var(#{$css-var-prefix}spacing) * 0.25);
        }
      }
    }
  }
}